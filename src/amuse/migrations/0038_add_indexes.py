# Generated by Django 2.1.15 on 2021-11-04 14:42

from django.db import migrations, models
import amuse.models.deliveries


class Migration(migrations.Migration):
    atomic = False

    dependencies = [('amuse', '0037_add_pandora_channel')]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AlterField(
                    model_name='batchdelivery',
                    name='channel',
                    field=models.PositiveSmallIntegerField(
                        choices=[
                            (1, 'fuga'),
                            (2, 'apple'),
                            (3, 'spotify'),
                            (4, 'tiktok'),
                            (5, 'soundcloud'),
                            (6, 'sevendigital'),
                            (7, 'amazon'),
                            (8, 'anghami'),
                            (9, 'claro_musica'),
                            (10, 'deezer'),
                            (11, 'nuuday'),
                            (12, 'tidal'),
                            (13, 'youtube_content_id'),
                            (14, 'youtube_music'),
                            (15, 'facebook'),
                            (16, 'twitch'),
                            (17, 'shazam'),
                            (18, 'audiomack'),
                            (19, 'boomplay'),
                            (20, 'pandora'),
                        ],
                        db_index=True,
                    ),
                ),
                migrations.AlterField(
                    model_name='batchdelivery',
                    name='delivery_id',
                    field=models.CharField(
                        db_index=True,
                        default=amuse.models.deliveries._batch_delivery_id,
                        max_length=18,
                    ),
                ),
                migrations.AlterField(
                    model_name='batchdeliveryrelease',
                    name='status',
                    field=models.PositiveSmallIntegerField(
                        choices=[
                            (0, 'created'),
                            (1, 'started'),
                            (2, 'succeeded'),
                            (10, 'storing'),
                            (11, 'redelivered'),
                            (99, 'failed'),
                        ],
                        db_index=True,
                        default=0,
                    ),
                ),
                migrations.AlterField(
                    model_name='batchdeliveryrelease',
                    name='type',
                    field=models.PositiveSmallIntegerField(
                        choices=[
                            (0, 'insert'),
                            (1, 'update'),
                            (2, 'takedown'),
                            (3, 'pro_takedown'),
                        ],
                        db_index=True,
                        default=0,
                    ),
                ),
            ],
            database_operations=[
                # Add extra indexes on batch_delivery table
                migrations.RunSQL(
                    'CREATE INDEX CONCURRENTLY IF NOT EXISTS batch_delivery_delivery_id_idx ON batch_delivery(delivery_id);',
                    reverse_sql='DROP INDEX IF EXISTS batch_delivery_delivery_id_idx;',
                ),
                migrations.RunSQL(
                    'CREATE INDEX CONCURRENTLY IF NOT EXISTS batch_delivery_channel_idx ON batch_delivery(channel);',
                    reverse_sql='DROP INDEX IF EXISTS batch_delivery_channel_idx;',
                ),
                # Add extra indexes on batch_delivery_release table
                migrations.RunSQL(
                    'CREATE INDEX CONCURRENTLY IF NOT EXISTS batch_delivery_release_type_idx ON batch_delivery_release(type);',
                    reverse_sql='DROP INDEX IF EXISTS batch_delivery_release_type_idx;',
                ),
                migrations.RunSQL(
                    'CREATE INDEX CONCURRENTLY IF NOT EXISTS batch_delivery_release_status_idx ON batch_delivery_release(status);',
                    reverse_sql='DROP INDEX IF EXISTS batch_delivery_release_status_idx;',
                ),
            ],
        )
    ]
