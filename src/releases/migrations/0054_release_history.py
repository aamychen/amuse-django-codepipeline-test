# Generated by Django 2.0.6 on 2018-06-14 11:06

import bitfield.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ('codes', '0003_status_orphaned'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('releases', '0053_genre_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalContributor',
            fields=[
                (
                    'id',
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=120)),
                ('apple_id', models.CharField(blank=True, max_length=120, null=True)),
                (
                    'role',
                    models.SmallIntegerField(
                        choices=[
                            (1, 'featured_artist'),
                            (2, 'writer'),
                            (3, 'producer'),
                            (4, 'mixer'),
                            (5, 'remixer'),
                        ]
                    ),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                (
                    'history_type',
                    models.CharField(
                        choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                        max_length=1,
                    ),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'song',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.Song',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical contributor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCoverArt',
            fields=[
                (
                    'id',
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name='ID'
                    ),
                ),
                ('file', models.TextField(max_length=100)),
                (
                    'width',
                    models.PositiveSmallIntegerField(
                        blank=True, default=None, null=True
                    ),
                ),
                (
                    'height',
                    models.PositiveSmallIntegerField(
                        blank=True, default=None, null=True
                    ),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                (
                    'history_type',
                    models.CharField(
                        choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                        max_length=1,
                    ),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'release',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.Release',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical cover art',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRelease',
            fields=[
                (
                    'id',
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name='ID'
                    ),
                ),
                (
                    'type',
                    models.SmallIntegerField(
                        choices=[(1, 'album'), (2, 'single'), (3, 'ep')]
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                (
                    'label',
                    models.CharField(
                        blank=True, default=None, max_length=120, null=True
                    ),
                ),
                (
                    'flags',
                    bitfield.models.BitField(
                        (
                            (
                                'DISTRIBUTED_BEFORE',
                                'Content has been distributed before',
                            ),
                        ),
                        default=None,
                    ),
                ),
                ('release_date', models.DateField()),
                (
                    'release_version',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ('link', models.CharField(blank=True, max_length=255, null=True)),
                (
                    'completed',
                    models.BooleanField(
                        default=False,
                        help_text='The release creation is complete. <strong>Must not</strong> be set manually.',
                    ),
                ),
                (
                    'approved',
                    models.BooleanField(
                        default=False,
                        help_text='The release is approved and ready for delivery. <strong>Must</strong> be set manually.',
                    ),
                ),
                (
                    'delivery_status',
                    models.SmallIntegerField(
                        choices=[
                            (0, 'Pending'),
                            (1, 'Started'),
                            (2, 'Success'),
                            (3, 'Failed'),
                        ],
                        default=0,
                    ),
                ),
                (
                    'status',
                    models.SmallIntegerField(
                        choices=[
                            (1, 'Submitted'),
                            (2, 'Incomplete'),
                            (3, 'Pending Approval'),
                            (4, 'Approved'),
                            (5, 'Not approved'),
                            (6, 'Delivered'),
                            (7, 'Undeliverable'),
                            (8, 'Released'),
                            (9, 'Rejected'),
                            (10, 'Taken down'),
                            (11, 'Deleted'),
                        ],
                        default=1,
                    ),
                ),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                (
                    'error_flags',
                    bitfield.models.BitField(
                        (
                            ('artwork_social-media', 'Artwork: Social media logos'),
                            ('artwork_text', 'Artwork: Text'),
                            ('artwork_format', 'Artwork: Format'),
                            ('artwork_size', 'Artwork: Size'),
                            ('artwork_blurry', 'Artwork: Blurry'),
                            (
                                'explicit_parental-advisory',
                                'Explicit: Parental advisory logo',
                            ),
                            ('titles_differs', 'Titles differs'),
                            ('release_date-changed', 'Release date changed'),
                            ('release_duplicate', 'Possible duplicate'),
                        ),
                        default=None,
                        null=True,
                    ),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                (
                    'history_type',
                    models.CharField(
                        choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                        max_length=1,
                    ),
                ),
                (
                    'genre',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.Genre',
                    ),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'meta_language',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.MetadataLanguage',
                    ),
                ),
                (
                    'upc',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='codes.UPC',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical release',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSong',
            fields=[
                (
                    'id',
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name='ID'
                    ),
                ),
                ('sequence', models.SmallIntegerField(db_index=True)),
                ('name', models.CharField(max_length=255)),
                (
                    'version',
                    models.CharField(
                        blank=True, default=None, max_length=255, null=True
                    ),
                ),
                ('recording_year', models.SmallIntegerField()),
                (
                    'recording_place_id',
                    models.CharField(
                        blank=True, default=None, max_length=120, null=True
                    ),
                ),
                (
                    'explicit',
                    models.PositiveSmallIntegerField(
                        choices=[(0, 'none'), (1, 'explicit'), (2, 'clean')], default=0
                    ),
                ),
                (
                    'origin',
                    models.PositiveSmallIntegerField(
                        choices=[(1, 'original'), (2, 'cover'), (3, 'remix')], default=1
                    ),
                ),
                ('filename', models.CharField(blank=True, default='', max_length=255)),
                ('cover_licensor', models.TextField(blank=True)),
                (
                    'youtube_content_id',
                    models.PositiveSmallIntegerField(
                        choices=[(0, 'none'), (1, 'block'), (2, 'monetize')], default=0
                    ),
                ),
                (
                    'error_flags',
                    bitfield.models.BitField(
                        (
                            ('rights_samplings', 'Contains samplings'),
                            ('rights_remix', 'Remix'),
                            ('rights_no-rights', 'No rights'),
                            ('audio_bad-quality', 'Audio: Bad quality'),
                            ('explicit_lyrics', 'Explicit: Lyrics'),
                            ('genre_not-approved', 'Not approved genre'),
                            ('audio_too-short', 'Audio: Too short'),
                        ),
                        default=None,
                        null=True,
                    ),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                (
                    'history_type',
                    models.CharField(
                        choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                        max_length=1,
                    ),
                ),
                (
                    'genre',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.Genre',
                    ),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'isrc',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='codes.ISRC',
                    ),
                ),
                (
                    'meta_audio_locale',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.MetadataLanguage',
                    ),
                ),
                (
                    'meta_language',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.MetadataLanguage',
                    ),
                ),
                (
                    'release',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.Release',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical song',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSongFile',
            fields=[
                (
                    'id',
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name='ID'
                    ),
                ),
                ('type', models.SmallIntegerField(choices=[(1, 'FLAC'), (2, 'MP3')])),
                ('duration', models.PositiveSmallIntegerField()),
                ('file', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                (
                    'history_type',
                    models.CharField(
                        choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                        max_length=1,
                    ),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'song',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.Song',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical song file',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSongFileUpload',
            fields=[
                (
                    'id',
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name='ID'
                    ),
                ),
                ('filename', models.CharField(db_index=True, max_length=64, null=True)),
                (
                    'status',
                    models.PositiveSmallIntegerField(
                        choices=[(0, 'Created'), (1, 'Completed')], default=0
                    ),
                ),
                ('link', models.TextField(default=None, null=True)),
                (
                    'transcode_id',
                    models.CharField(db_index=True, max_length=255, null=True),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                (
                    'history_type',
                    models.CharField(
                        choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                        max_length=1,
                    ),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'song',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='releases.Song',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical song file upload',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
    ]
