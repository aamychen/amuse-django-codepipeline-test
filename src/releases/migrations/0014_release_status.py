# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-11-22 13:54
from __future__ import unicode_literals
from datetime import datetime, timedelta, timezone
from django.db import migrations, models
from releases.models import Release


def migrate_status(apps, schema_editor):
    Release = apps.get_model('releases', 'Release')
    for release in Release.objects.all():
        if (
            release.completed
            and release.approved
            and release.delivery_status == Release.DELIVERY_STATUS_SUCCESS
            and release.release_date <= datetime.today().date()
        ):
            release.status = Release.STATUS_RELEASED
        elif (
            release.completed
            and release.approved
            and release.delivery_status == Release.DELIVERY_STATUS_SUCCESS
        ):
            release.status = Release.STATUS_DELIVERED
        elif (
            release.completed
            and release.approved
            and release.delivery_status == Release.DELIVERY_STATUS_FAILED
        ):
            release.status = Release.STATUS_UNDELIVERABLE
        elif (
            release.completed
            and release.approved
            and release.delivery_status == Release.DELIVERY_STATUS_PENDING
        ):
            release.status = Release.STATUS_APPROVED
        elif (
            release.completed
            and not release.approved
            and release.created <= datetime.now(timezone.utc) - timedelta(days=14)
        ):
            release.status = Release.STATUS_ABANDONED
        elif (
            release.completed
            and not release.approved
            and release.created <= datetime.now(timezone.utc) - timedelta(days=2)
        ):
            release.status = Release.STATUS_REJECTED
        elif release.completed and not release.approved:
            release.status = Release.STATUS_PENDING
        elif not release.completed:
            release.status = Release.STATUS_INCOMPLETE
        else:
            release.status = -1
        release.save()


def reverse_status(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [('releases', '0013_release_link')]

    operations = [
        migrations.AddField(
            model_name='release',
            name='status',
            field=models.SmallIntegerField(
                choices=[
                    (1, 'Submitted'),
                    (2, 'Incomplete'),
                    (3, 'Pending Approval'),
                    (4, 'Approved'),
                    (5, 'Rejected'),
                    (6, 'Delivered'),
                    (7, 'Undeliverable'),
                    (8, 'Released'),
                    (9, 'Abandoned'),
                ],
                default=1,
            ),
        ),
        migrations.RunPython(migrate_status, reverse_status),
    ]
