# Generated by Django 2.0.10 on 2020-05-06 08:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('payments', '0019_historicalpaymenttransaction'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('subscriptions', '0011_subscriptionplan_apple_product_id_notrial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalSubscription',
            fields=[
                (
                    'id',
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name='ID'
                    ),
                ),
                ('valid_from', models.DateField(db_index=True)),
                (
                    'valid_until',
                    models.DateField(
                        blank=True,
                        help_text='Only ended subscriptions have this set',
                        null=True,
                    ),
                ),
                (
                    'grace_period_until',
                    models.DateField(
                        blank=True,
                        help_text='Will retry renewal payments and consider Subscription as active until this date',
                        null=True,
                    ),
                ),
                (
                    'status',
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, 'Created (pending first payment)'),
                            (1, 'Active'),
                            (2, 'Expired (was not renewed or was canceled)'),
                            (4, 'Error (first payment failed)'),
                            (6, 'In expiry grace period (due to failed payment)'),
                        ],
                        default=0,
                    ),
                ),
                (
                    'provider',
                    models.PositiveSmallIntegerField(
                        choices=[(1, 'Adyen'), (2, 'iOS in-app')], default=1
                    ),
                ),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                (
                    'history_type',
                    models.CharField(
                        choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                        max_length=1,
                    ),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'payment_method',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='payments.PaymentMethod',
                    ),
                ),
                (
                    'plan',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='subscriptions.SubscriptionPlan',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical subscription',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSubscriptionPlan',
            fields=[
                (
                    'id',
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=64)),
                (
                    'price',
                    models.DecimalField(
                        decimal_places=2, help_text='Including VAT', max_digits=5
                    ),
                ),
                (
                    'period',
                    models.IntegerField(
                        blank=True,
                        help_text='Number of months of pro membership granted by this type of subscription. If left blank it is a perpetual subscription.',
                        null=True,
                    ),
                ),
                (
                    'trial_days',
                    models.IntegerField(
                        default=0,
                        help_text='Number of free trial days granted at beginning of subscription',
                    ),
                ),
                (
                    'grace_period_days',
                    models.IntegerField(
                        default=0,
                        help_text='Number of days subscription remains active if payment fails',
                    ),
                ),
                (
                    'is_public',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text='If checked users can see and purchase this subscription',
                    ),
                ),
                (
                    'apple_product_id',
                    models.CharField(blank=True, default='', max_length=255),
                ),
                (
                    'apple_product_id_notrial',
                    models.CharField(
                        blank=True,
                        default='',
                        help_text='Users that are not eligible for trial will be put on this plan',
                        max_length=255,
                    ),
                ),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                (
                    'history_type',
                    models.CharField(
                        choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')],
                        max_length=1,
                    ),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical subscription plan',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
    ]
