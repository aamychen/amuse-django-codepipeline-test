version: "3.3"

services:
  app:
    image: amuse.io/app
    build:
      context: .
    ports:
      - 80:8000
    volumes:
      - ./:/app
    depends_on:
      - postgres
      - minio
      - redis
    env_file:
      - docker/envs/local/env_files/app.env
    command:
      - "python3"
      - "manage.py"
      - "runserver"
      - "0.0.0.0:8000"

  celery:
    image: amuse.io/app
    volumes:
      - ./src:/app/src
    depends_on:
      - postgres
      - minio
      - redis
    environment:
      C_FORCE_ROOT: "true"
    env_file:
      - docker/envs/local/env_files/app.env
    command:
      - "celery"
      - "-A"
      - "amuse"
      - "worker"
      - "-l"
      - "INFO"

  beat:
    image: amuse.io/app
    volumes:
      - ./src:/app/src
    depends_on:
      - postgres
      - minio
      - redis
    environment:
      C_FORCE_ROOT: "true"
    env_file:
      - docker/envs/local/env_files/app.env
    command:
      - "celery"
      - "-A"
      - "amuse"
      - "beat"
      - "-l"
      - "INFO"
      - "--scheduler"
      - "django_celery_beat.schedulers:DatabaseScheduler"

  postgres:
    image: postgres:12.7-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./dumps:/dumps
    environment:
      POSTGRES_DB: amuse
      POSTGRES_HOST_AUTH_METHOD: trust

  minio:
    image: minio/minio:RELEASE.2018-04-12T23-41-09Z
    command: "server /export"
    volumes:
      - minio-data:/export
    ports:
      - "9000:9000"
    networks:
      default:
        aliases:
          - s3-dev.amuse.io

    env_file:
      - docker/envs/local/env_files/minio.env

  redis:
    image: redis:4.0.11-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
  minio-data:
  redis-data:
